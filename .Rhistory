library(lsmeans)
library(DHARMa)
library(tidyverse);library(ggpubr);library(janitor);library(vegan);library(plotrix);library(ggvegan)
load("../data/coral.2013.divot.flat_long.RData")
load("../data/coral.2014.divot.flat_long.RData")
load("../data/coral.2016.divot.flat_long.RData")
load("../data/coral.2014_wide.RData")
load("../data/coral.2016_wide.RData")
# Summary
coral.2013.divot.flat_long %>%
#  group_by(Tile.Placement) %>%
summarize(sum(Corals))
# 1791 corals found
coral.2013.divot.flat_long %>%
group_by(Tile.Placement) %>%
summarize(sum(Corals))
# All.divots	1657
# Flat.surface	134
1657/1791
# 0.9251815
# Checking Data
coral.2013.divot.flat_long
head(coral.2013.divot.flat_long)
str(coral.2013.divot.flat_long)
# Convert characters to factors
coral.2013.divot.flat_long$Treatment <- as.factor(coral.2013.divot.flat_long$Treatment)
coral.2013.divot.flat_long$Location <- as.factor(coral.2013.divot.flat_long$Location)
coral.2013.divot.flat_long$Depth <- as.factor(coral.2013.divot.flat_long$Depth)
coral.2013.divot.flat_long$Tile.Placement <- as.factor(coral.2013.divot.flat_long$Tile.Placement)
coral.2013.divot.flat_long$Pair <- as.factor(coral.2013.divot.flat_long$Pair)
coral.2013.divot.flat_long$Original.Tile.Number <- as.factor(coral.2013.divot.flat_long$Original.Tile.Number)
str(coral.2013.divot.flat_long)
# How much of the data is zero?
100*sum(coral.2013.divot.flat_long$Corals == 0)/nrow(coral.2013.divot.flat_long) # 29.27632
hist(coral.2013.divot.flat_long$Corals) # zero inflated, but not as bad as the other data?
#### Poisson Distribution ####
pois.2013 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2013.divot.flat_long, family = poisson)
# type 3 test you need the contrasts argument
#### Negative Binomial GLM ####
nb.2013 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2013.divot.flat_long, family = nbinom2)
# type 3 test you need the contrasts argument
#### Zero-inflated Poisson ####
zip.2013 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 1,
data = coral.2013.divot.flat_long, family = poisson)
# failed to converge
#### Zero-inflated Negative Binomial ####
zinb.2013 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 1,
data = coral.2013.divot.flat_long, family = nbinom2)
# type 3 test you need the contrasts argument
# Model Selection
AIC(pois.2013, nb.2013, zinb.2013)
#           df      AIC
# pois.2013 10 1407.974
# nb.2013   11 1380.050
# zinb.2013 12 1382.050
# so the normal negative binomial fits our data the best
# Model
nb.2013 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2013.divot.flat_long, family = nbinom2)
# type 3 test you need the contrasts argument
summary(nb.2013)
# seems fine that the dispersion paramter is high: https://stat.ethz.ch/pipermail/r-sig-mixed-models/2019q1/027657.html
performance::r2(nb.2013)
# Conditional R2: 0.856
#    Marginal R2: 0.722
# Warning: mu of 5.9 is too close to zero, estimate of random effect variances may be unreliable.
# ANOVA Table
car::Anova(nb.2013, type=3)
# Analysis of Deviance Table (Type III Wald chisquare tests)
#
# Response: Corals
#                             Chisq Df Pr(>Chisq)
# (Intercept)              108.1537  1    < 2e-16 ***
# Treatment                  6.3347  1    0.01184 *
# Tile.Placement           505.4455  1    < 2e-16 ***
# Location                   3.5767  2    0.16724
# Depth                      3.8967  2    0.14251
# Treatment:Tile.Placement   0.9082  1    0.34060
# ---
# Signif. codes:
# 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# Model Fit
nb.2013_simresids <- simulateResiduals(nb.2013)
plot(nb.2013_simresids) # quantile deviations detected in the residuals but it doesn't look that bad?
ref_grid(nb.2013)
# EEMEANS
emmeans.2013 <- emmeans(nb.2013, ~ Treatment * Tile.Placement, type="response")
#  Treatment Tile.Placement response    SE  df lower.CL upper.CL
#  Caged     All.divots        7.538 0.785 293    6.141    9.253
#  Uncaged   All.divots       11.327 1.122 293    9.320   13.766
#  Caged     Flat.surface      0.625 0.103 293    0.452    0.864
#  Uncaged   Flat.surface      0.758 0.118 293    0.558    1.029
#
# Results are averaged over the levels of: Location, Depth
# Confidence level used: 0.95
# Intervals are back-transformed from the log scale
pairs(emmeans.2013)
#  contrast                                   ratio     SE  df t.ratio p.value
#  Caged All.divots / Uncaged All.divots      0.665 0.0726 293 -3.731  0.0013
#  Caged All.divots / Caged Flat.surface     12.065 2.0161 293 14.903  <.0001
#  Caged All.divots / Uncaged Flat.surface    9.949 1.6153 293 14.151  <.0001
#  Uncaged All.divots / Caged Flat.surface   18.130 3.0750 293 17.085  <.0001
#  Uncaged All.divots / Uncaged Flat.surface 14.951 2.3204 293 17.427  <.0001
#  Caged Flat.surface / Uncaged Flat.surface  0.825 0.1686 293 -0.943  0.7817
#
# Results are averaged over the levels of: Location, Depth
# P value adjustment: tukey method for comparing a family of 4 estimates
# Tests are performed on the log scale
cols <- c("#29AF7FFF", "#440154FF")
p_2013.emmeans <- emmip(nb.2013, Treatment ~ Tile.Placement, CIs = TRUE, level = 0.95, type="response") +
scale_colour_manual(values= cols) +
theme_pubr() +
theme(axis.ticks.x=element_blank(),
axis.text.x = element_blank()) +
labs(x= "", y= "Coral Abundance\n (least square means)") +
ggtitle("a) Two weeks") +
annotate("text", label= "a", y=11.7, x=.95) +
annotate("text", label= "b", y= 7.5, x=.9) +
annotate("text", label= "c", y=1, x=2.1) +
annotate("text", label= "c", y= .8, x=1.9) +
annotate("text", label= paste('Treatment: p = 0.01'), y= 12, x=1.92) +
annotate("text", label= paste('Position on tile: p < 2e-16'), y= 13, x=2)
p_2013.emmeans
# pairwise contrasts
nb.2013.emm <- emmeans(nb.2013, pairwise ~ Treatment * Tile.Placement, type="response")
nb.2013.emm
plot(nb.2013.emm, comparisons = TRUE, by="Treatment") + theme_bw() +
labs(y = "", x = "Estimated marginal mean (coral recruits)")
# Checking Data
head(coral.2014.divot.flat_long)
str(coral.2014.divot.flat_long)
# Convert characters to factors
coral.2014.divot.flat_long$Treatment <- as.factor(coral.2014.divot.flat_long$Treatment)
coral.2014.divot.flat_long$Location <- as.factor(coral.2014.divot.flat_long$Location)
coral.2014.divot.flat_long$Depth <- as.factor(coral.2014.divot.flat_long$Depth)
coral.2014.divot.flat_long$Tile.Placement <- as.factor(coral.2014.divot.flat_long$Tile.Placement)
# How much of the data is zero?
100*sum(coral.2014.divot.flat_long$Corals == 0)/nrow(coral.2014.divot.flat_long) # 81.89655
#### Poisson Distribution ####
pois.2014 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2014.divot.flat_long, family = poisson)
# type 3 test you need the contrasts argument
#### Negative Binomial GLM ####
nb.2014 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2014.divot.flat_long, family = nbinom2)
# type 3 test you need the contrasts argument
#### Zero-inflated Poisson ####
zip.2014 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 1,
data = coral.2014.divot.flat_long, family = poisson)
#### Zero-inflated Negative Binomial ####
zinb.2014 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 1,
data = coral.2014.divot.flat_long, family = nbinom2)
# type 3 test you need the contrasts argument
# Model Selection
AIC(pois.2014, nb.2014, zip.2014, zinb.2014)
#           df      AIC
# pois.2014 10 444.3978
# nb.2014   11 445.4965
# zip.2014  11 446.3978
# zinb.2014 12 447.4965
# poisson model is the best
summary(pois.2014)
# Model
pois.2014 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2014.divot.flat_long, family = poisson)
# type 3 test you need the contrasts argument
summary(pois.2014)
performance::r2(pois.2014)
# Conditional R2: 0.483
#    Marginal R2: 0.156
# Warning: mu of 0.1 is too close to zero, estimate of random effect variances may be unreliable.
# ANOVA Table
car::Anova(pois.2014, type=3)
# Analysis of Deviance Table (Type III Wald chisquare tests)
#
# Response: Corals
#                            Chisq Df Pr(>Chisq)
# (Intercept)              85.4931  1    < 2e-16 ***
# Treatment                 3.6212  1    0.05705 .
# Tile.Placement           26.1250  1    3.2e-07 ***
# Location                  3.4210  2    0.18078
# Depth                     0.8415  2    0.65654
# Treatment:Tile.Placement  0.0053  1    0.94224
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# Model Fit
pois.2014_simresids <- simulateResiduals(pois.2014)
plot(pois.2014_simresids) # looks good!
# EEMEANS
emmeans.2014 <- emmeans(pois.2014, ~ Treatment * Tile.Placement, type="response")
#  Treatment Tile.Placement   rate     SE  df lower.CL upper.CL
#  Caged     All.divots     0.2930 0.0776 338   0.1741   0.4933
#  Uncaged   All.divots     0.1539 0.0456 338   0.0859   0.2756
#  Caged     Flat.surface   0.0760 0.0266 338   0.0381   0.1514
#  Uncaged   Flat.surface   0.0414 0.0182 338   0.0175   0.0981
#
# Results are averaged over the levels of: Location, Depth
# Confidence level used: 0.95
# Intervals are back-transformed from the log scale
pairs(emmeans.2014)
#  contrast                                  ratio    SE  df t.ratio p.value
#  Caged All.divots / Uncaged All.divots      1.90 0.593 338 2.067   0.1662
#  Caged All.divots / Caged Flat.surface      3.86 1.157 338 4.501   0.0001
#  Caged All.divots / Uncaged Flat.surface    7.07 3.175 338 4.358   0.0001
#  Uncaged All.divots / Caged Flat.surface    2.03 0.785 338 1.822   0.2646
#  Uncaged All.divots / Uncaged Flat.surface  3.71 1.582 338 3.082   0.0119
#  Caged Flat.surface / Uncaged Flat.surface  1.83 0.925 338 1.202   0.6259
#
# Results are averaged over the levels of: Location, Depth
# P value adjustment: tukey method for comparing a family of 4 estimates
# Tests are performed on the log scale
cols <- c("#29AF7FFF", "#440154FF")
p_2014.emmeans <- emmip(pois.2014, Treatment ~ Tile.Placement, CIs = TRUE, level = 0.95, type="response") +
scale_colour_manual(values= cols) +
theme_pubr() +
theme(axis.ticks.x=element_blank(),
axis.text.x = element_blank()) +
labs(x= "", y= "Coral Abundance\n (least square means)") +
ggtitle("b) One year") +
annotate("text", label= "ab", y=0.3, x=.9) +
annotate("text", label= "ab", y=0.15, x=.95) +
annotate("text", label= "c", y=0.04, x=2.1) +
annotate("text", label= "bc", y=0.09, x=2.07)+
annotate("text", label= paste('Treatment: p = 0.06'), y= 0.45, x=1.91) +
annotate("text", label= paste('Position on tile: p < 3.2e-07'), y= 0.48, x=2.025)
p_2014.emmeans
# pairwise contrasts
pois.2014.emm <- emmeans(pois.2014, pairwise ~ Treatment * Tile.Placement, type="response")
pois.2014.emm
plot(pois.2014.emm, comparisons = TRUE, by="Treatment") + theme_bw() +
labs(y = "", x = "Estimated marginal mean (coral recruits)")
# Checking Data
head(coral.2016.divot.flat_long)
str(coral.2016.divot.flat_long)
# Convert characters to factors
coral.2016.divot.flat_long$Treatment <- as.factor(coral.2016.divot.flat_long$Treatment)
coral.2016.divot.flat_long$Location <- as.factor(coral.2016.divot.flat_long$Location)
coral.2016.divot.flat_long$Depth <- as.factor(coral.2016.divot.flat_long$Depth)
coral.2016.divot.flat_long$Tile.Placement <- as.factor(coral.2016.divot.flat_long$Tile.Placement)
unique(coral.2016.divot.flat_long$Tile.Placement)
# How much of the data is zero?
100*sum(coral.2016.divot.flat_long$Corals == 0)/nrow(coral.2016.divot.flat_long) # 95.25547
#### Poisson Distribution ####
pois.2016 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2016.divot.flat_long, family = poisson)
# type 3 test you need the contrasts argument
#### Negative Binomial GLM ####
nb.2016 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2016.divot.flat_long, family = nbinom2)
# convergence error
#### Zero-inflated Poisson ####
zip.2016 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 1,
data = coral.2016.divot.flat_long, family = poisson)
#### Zero-inflated Negative Binomial ####
zinb.2016 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum",
Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 1,
data = coral.2016.divot.flat_long, family = nbinom2)
# convergence error
# Model Selection
AIC(pois.2016, zip.2016)
#           df      AIC
# pois.2016 10 125.1801
# zip.2016  11 129.1142
# poisson model is the best?
summary(pois.2016)
# Model
pois.2016 <- glmmTMB(Corals ~ Treatment * Tile.Placement + Location + Depth + (1|Pair) + (1|Original.Tile.Number),
contrasts=list(Treatment="contr.sum", Tile.Placement="contr.sum", Location="contr.sum", Depth="contr.sum"), zi = ~ 0,
data = coral.2016.divot.flat_long, family = poisson)
# type 3 test you need the contrasts argument
summary(pois.2016)
performance::r2(pois.2016)
# Warning: mu of 0.0 is too close to zero, estimate of random effect variances may be unreliable.
# Random effect variances not available. Returned R2 does not account for random effects.
# # R2 for Mixed Models
#
#   Conditional R2: NA
#      Marginal R2: 0.141
# Conditional: variance explained by the entire model
# Marginal: variance explained only by the fixed effects
# ANOVA Table
car::Anova(pois.2016, type=3)
# Analysis of Deviance Table (Type III Wald chisquare tests)
#
# Response: Corals
#                            Chisq Df Pr(>Chisq)
# (Intercept)              11.4117  1  0.0007298 ***
# Treatment                 0.1301  1  0.7183462
# Tile.Placement            1.4879  1  0.2225496
# Location                  3.0570  2  0.2168630
# Depth                     0.3480  2  0.8402903
# Treatment:Tile.Placement  1.4879  1  0.2225497
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# Model Fit
pois.2016_simresids <- simulateResiduals(pois.2016)
plot(pois.2016_simresids) # looks good!
# EEMEANS
emmeans(pois.2016, ~ Treatment * Tile.Placement, type="response")
#  Treatment Tile.Placement    rate      SE  df lower.CL upper.CL
#  Caged     All.divots     0.00353 0.00586 264 0.000134   0.0931
#  Uncaged   All.divots     0.00521 0.00851 264 0.000208   0.1301
#  Caged     Flat.surface   0.01411 0.02181 264 0.000673   0.2959
#  Uncaged   Flat.surface   0.00521 0.00851 264 0.000208   0.1301
#
# Results are averaged over the levels of: Location, Depth
# Confidence level used: 0.95
# Intervals are back-transformed from the log scale
cols <- c("#29AF7FFF", "#440154FF")
p_2016.emmeans <- emmip(pois.2016, Treatment ~ Tile.Placement, CIs = TRUE, level = 0.95, type="response") +
scale_colour_manual(values= cols) +
theme_pubr() +
scale_x_discrete(breaks=c("All.divots", "Flat.surface"),
labels=c("Grazing Scar", "Flat Surface")) +
labs(x= "Position on tile", y= "Coral Abundance\n (least square means)") +
ggtitle("c) Three years") +
annotate("text", label= "a", y=0.12, x=.97) +
annotate("text", label= "a", y=0.01, x=.92) +
annotate("text", label= "a", y=0.15, x=2.02) +
annotate("text", label= "a", y=0.01, x=2.07) +
annotate("text", label= paste('Treatment: ns'), y= 0.25, x=.88) +
annotate("text", label= paste('Position on tile: ns'), y= 0.23, x=.95)
p_2016.emmeans
# pairwise contrasts
pois.2016.emm <- emmeans(pois.2016, pairwise ~ Treatment * Tile.Placement, type="response")
pois.2016.emm # nothing significant
plot(pois.2016.emm, comparisons = TRUE, by="Treatment") + theme_bw() +
labs(y = "", x = "Estimated marginal mean (coral recruits)")
ggarrange(p_2013.emmeans, p_2014.emmeans, p_2016.emmeans,
nrow=3, common.legend= TRUE, legend= "right")
ggsave(filename= "../figures/combined-eemeans.png",
height=9, width=7)
# Checking Data
str(coral.2014_wide)
# Convert characters to factors
coral.2014_wide$Treatment <- as.factor(coral.2014_wide$Treatment)
coral.2014_wide$Location <- as.factor(coral.2014_wide$Location)
coral.2014_wide$Depth <- as.factor(coral.2014_wide$Depth)
# How much of the data is zero?
100*sum(coral.2014_wide$Edge == 0)/nrow(coral.2014_wide) # 75.28736
#### Poisson Distribution ####
pois.2014 <- glmmTMB(Edge ~ Treatment + Location + Depth + (1|Pair), zi = ~ 0,
data = coral.2014_wide, family = poisson)
#### Negative Binomial GLM ####
nb.2014 <- glmmTMB(Edge ~ Treatment  + Location + Depth + (1|Pair), zi = ~ 0,
data = coral.2014_wide, family = nbinom2)
car::Anova(nb.2014) # same as the zip
#### Zero-inflated Poisson ####
zip.2014 <- glmmTMB(Edge ~ Treatment + Location + Depth + (1|Pair), zi = ~ 1,
data = coral.2014_wide, family = poisson)
#### Zero-inflated Negative Binomial ####
zinb.2014 <- glmmTMB(Edge ~ Treatment + Location + Depth + (1|Pair), zi = ~ 1,
data = coral.2014_wide, family = nbinom2)
# Model Selection
AIC(pois.2014, nb.2014,zip.2014, zinb.2014)
#           df      AIC
# pois.2014  7 337.9584
# nb.2014    8 323.1204
# zip.2014   8 323.0704
# zinb.2014  9 324.7513
# poisson model is the best
summary(zip.2014)
# Model
#### Poisson Distribution ####
zip.2014.edge <- glmmTMB(Edge ~ Treatment + Location + Depth + (1|Pair), zi = ~ 1,
data = coral.2014_wide, family = poisson)
summary(zip.2014.edge)
performance::r2(zip.2014.edge)
# Warning: mu of 1.0 is too close to zero, estimate of random effect variances may be unreliable.
# # R2 for Mixed Models
#
#   Conditional R2: 0.631
#      Marginal R2: 0.337
# Conditional: variance explained by the entire model
# Marginal: variance explained only by the fixed effects
# ANOVA Table
car::Anova(zip.2014.edge, type=2)
# Analysis of Deviance Table (Type II Wald chisquare tests)
#
# Response: Edge
#            Chisq Df Pr(>Chisq)
# Treatment 2.0416  1    0.15305
# Location  6.6933  2    0.03520 *
# Depth     6.9575  2    0.03085 *
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# Model Fit
zip.2014.edge_simresids <- simulateResiduals(zip.2014.edge)
plot(zip.2014.edge_simresids) # looks good!
# EEMEANS
pairs(emmeans(zip.2014.edge, ~ Treatment))
#  contrast        estimate    SE  df t.ratio p.value
#  Caged - Uncaged    0.423 0.296 166 1.429   0.1549
#
# Results are averaged over the levels of: Location, Depth
# Results are given on the log (not the response) scale.
cols <- c("#29AF7FFF", "#440154FF")
p_2014.edge.emmeans <- emmip(zip.2014.edge, ~Treatment, CIs = TRUE, level = 0.95, type= "response") +
scale_colour_manual(values= cols) +
theme_pubr() +
labs(x= "", y= "Edge Coral Abundance\n (least square means)") +
ggtitle("a) One Year")+
annotate("text", label= paste('Treatment: ns'), y= 1.7, x=1.88)
p_2014.edge.emmeans
emmip(zip.2014.edge, ~Location, CIs = TRUE, level = 0.95, type= "response")
emmip(zip.2014.edge, ~Depth, CIs = TRUE, level = 0.95, type= "response")
# Checking Data
str(coral.2016_wide)
# Convert characters to factors
coral.2016_wide$Treatment <- as.factor(coral.2016_wide$Treatment)
coral.2016_wide$Location <- as.factor(coral.2016_wide$Location)
coral.2016_wide$Depth <- as.factor(coral.2016_wide$Depth)
# How much of the data is zero?
100*sum(coral.2016_wide$Edge.final == 0)/nrow(coral.2016_wide) # 81.75182
#### Poisson Distribution ####
pois.2016 <- glmmTMB(Edge.final ~ Treatment + Location + Depth + (1|Pair), zi = ~ 0,
data = coral.2016_wide, family = poisson)
#### Negative Binomial GLM ####
nb.2016 <- glmmTMB(Edge.final ~ Treatment  + Location + Depth + (1|Pair), zi = ~ 0,
data = coral.2016_wide, family = nbinom2)
#### Zero-inflated Poisson ####
zip.2016 <- glmmTMB(Edge.final ~ Treatment + Location + Depth + (1|Pair), zi = ~ 1,
data = coral.2016_wide, family = poisson)
#### Zero-inflated Negative Binomial ####
zinb.2016 <- glmmTMB(Edge.final ~ Treatment + Location + Depth + (1|Pair), zi = ~ 1,
data = coral.2016_wide, family = nbinom2)
# Model Selection
AIC(pois.2016, nb.2016,zip.2016, zinb.2016)
# pois.2016	7	175.6454
# nb.2016	8	176.5877
# zip.2016	8	177.0303
# zinb.2016	9	178.5877
# poisson model is the best
summary(pois.2016)
# Model
#### Poisson Distribution ####
pois.2016 <- glmmTMB(Edge.final ~ Treatment + Location + Depth + (1|Pair), zi = ~ 0,
data = coral.2016_wide, family = poisson)
summary(pois.2016)
performance::r2(pois.2016)
# # Warning: mu of 0.1 is too close to zero, estimate of random effect variances may be unreliable.
# # R2 for Mixed Models
# Conditional R2: 0.504
#    Marginal R2: 0.289
# Conditional: variance explained by the entire model
# Marginal: variance explained only by the fixed effects
# ANOVA Table
car::Anova(pois.2016, type=2)
# Analysis of Deviance Table (Type II Wald chisquare tests)
#
# Response: Edge.final
#             Chisq Df Pr(>Chisq)
# Treatment  0.3478  1  0.5553575
# Location  14.8587  2  0.0005936 ***
# Depth      3.7232  2  0.1554260
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
# Model Fit
pois.2016_simresids <- simulateResiduals(pois.2016)
plot(pois.2016_simresids) # looks good!
# EEMEANS
pairs(emmeans(pois.2016, ~ Treatment, type="response"))
#  contrast        ratio    SE  df t.ratio p.value
#  Caged / Uncaged  1.21 0.393 130 0.590   0.5564
#
# Results are averaged over the levels of: Location, Depth
# Tests are performed on the log scale
cols <- c("#29AF7FFF", "#440154FF")
p_2016.edge.emmeans <- emmip(pois.2016, ~ Treatment, CIs = TRUE, level = 0.95, type="response") +
scale_color_manual(values= cols) +
theme_pubr() +
labs(x= "", y= "Edge Coral Abundance\n (least square means)") +
ggtitle("b) Three years") +
annotate("text", label= paste('Treatment: ns'), y= .25, x=1.88)
p_2016.edge.emmeans
ggarrange(p_2014.edge.emmeans, p_2016.edge.emmeans,
nrow=2, common.legend= TRUE, legend= "right")
ggsave(filename= "../figures/edge-combined-eemeans.png",
height=7, width=5)
# Summary
coral.2013.divot.flat_long %>%
#  group_by(Tile.Placement) %>%
summarize(sum(Corals))
